# -*- coding: utf-8 -*-
"""Team A correlation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Goag9Auwws-RbOCN19AlDC94xbK4nrJ2

#### Obtain Data from investing.com from Jan 2021 to July 2021
"""

import investpy

data = investpy.get_crypto_historical_data(crypto='bitcoin',
                                           from_date='01/01/2021',
                                           to_date='31/07/2021')

data1 = investpy.get_crypto_historical_data(crypto='dogecoin',
                                           from_date='01/01/2021',
                                           to_date='31/07/2021')

data2 = investpy.get_crypto_historical_data(crypto='ethereum',
                                           from_date='01/01/2021',
                                           to_date='31/07/2021')

data3 = investpy.get_crypto_historical_data(crypto='tether',
                                           from_date='01/01/2021',
                                           to_date='31/07/2021')

"""#### Obtain Exact Closing Prices"""

import pandas as pd
df = pd.DataFrame({'BTC': data.Close,
                   'DOG': data1.Close,
                   'ETH': data2.Close,
                   'USDT': data3.Close})
df.head()

"""### Visualize Relative Changes of Closing Prices

**Observation**
Whenever the Market for BTC and DOGE rises, USDT will decrease and vice versa
"""

import matplotlib.pyplot as plt
import numpy as np

fig, ax1 = plt.subplots(figsize=(20, 10))
ax2 = ax1.twinx()
rspine = ax2.spines['right']
rspine.set_position(('axes', 1.15))
ax2.set_frame_on(True)
ax2.patch.set_visible(False)
fig.subplots_adjust(right=0.7)

#df['BTC'].plot(ax=ax1, style='b-')
#df['DOG'].plot(ax=ax2, style='g-')
df['BTC'].plot(ax=ax1, style='b-')
df['DOG'].plot(ax=ax1, style='r-', secondary_y=True)
df['USDT'].plot(ax=ax2, style='g-')

# legend
ax2.legend([ax1.get_lines()[0],
            ax1.right_ax.get_lines()[0],
            ax2.get_lines()[0]],
           ['BTC','DOG','USDT'])

"""### Measure Correlation of Closing Prices

Pearson Correaltion is calculated on the Closign Prices of BTC, ETH, DOGE and USDT.

**Definition** - Pearson correlation is a measure of the linear correlation between two variables X and Y. 
It has a value between +1 and −1, where 1 is total positive linear correlation, 0 is no linear correlation, and −1 is total negative linear correlation.

**Observations**
- Corelation matrix is symetric so only the lower half is shown. 
- DOGE and ETH were highly correlated in past 7 months. This means, when DOGE closing price increased ETH also followed the same. 
- DOGE and ETH were highly correlated with 0.9065 Pearson correlation coefficient.
- BTC, DOGE and ETH usually have low correlation on the market and is shows the same in the visualization
- Everytime, it is said that when the Market for BTC, DOGE, ETH rises, USDT will decrease. Hence the correlation cannot be mapped due to this inverse market trend
"""

import seaborn as sns
import matplotlib.pyplot as plt

# Compute the correlation matrix
corr = df.corr()

# Generate a mask for the upper triangle
mask = np.zeros_like(corr, dtype=np.bool)
mask[np.triu_indices_from(mask)] = True

# Set up the matplotlib figure
f, ax = plt.subplots(figsize=(10, 10))

# Draw the heatmap with the mask and correct aspect ratio
sns.heatmap(corr, annot=True, fmt = '.4f', mask=mask, center=0, square=True, linewidths=.5)

"""### Visualize Returns from 7 months"""

df_return = df.apply(lambda x: x / x[0])
df_return.plot(grid=True, figsize=(15, 10)).axhline(y = 1, color = "black", lw = 2)

"""### Percentage Increase"""

df_perc = df_return.tail(1) * 100
ax = sns.barplot(data=df_perc)
df_perc

"""### How many coins could have been bought for $2000? """

budget = 2000 # USD
df_coins = budget/df.head(1)

ax = sns.barplot(data=df_coins)
df_coins

"""### How much money could have been made? """

df_profit = df_return.tail(1) * budget

ax = sns.barplot(data=df_profit)
df_profit